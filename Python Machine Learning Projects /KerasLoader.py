# -*- coding: utf-8 -*-
"""KerasLoader.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kUkftiDF-lPj1uUCTwIbRq-92hDT5Xaa
"""

from keras.models import Model, load_model
#from matplotlib import image
from pathlib import Path
import numpy as np
from keras.preprocessing.image import load_img
from keras.preprocessing.image import img_to_array
from keras.applications.vgg16 import preprocess_input, decode_predictions


class KerasLoader():

    def __init__(self, model_number: int, base_path: str):
        self.model_number = model_number
        self.base_path = Path(base_path)
        self.model = self.load_net()

    def load_net(self) -> Model:
        model_path = self.base_path / f"Model{self.model_number}.h5"
        return load_model(model_path)

    def predict(self, video_name: str) -> float:
        full_filename = (self.base_path / 'Data' / video_name).with_suffix(".jpg")
        image=load_img(full_filename, target_size=(150,150))
        image=img_to_array(image)
        image=image.reshape((1, image.shape[0], image.shape[1], image.shape[2]))
        #image=preprocess_input(image)
        result = self.model.predict(image)
        return result[0][0]

#from KerasExample.KerasLoader import KerasLoader
from pathlib import Path

model_number = 2
base_path = "/content"
mod = KerasLoader(model_number, base_path)
res = mod.predict("6_3_54_5")
print(f"The result from Keras is {res}")
